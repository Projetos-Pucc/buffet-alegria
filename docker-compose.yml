version: "3.7"

services:
    # image project
    app:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - laravel

    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "8989:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - laravel

    # db mysql
    db:
        image: mysql:8.1.0
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-laravel}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
            MYSQL_PASSWORD: ${DB_PASSWORD:-userpass}
            MYSQL_USER: ${DB_USERNAME:-username}
        env_file:
            - .env
        volumes:
            - ./.docker/mysql/dbdata:/var/lib/mysql
        ports:
            - "3388:3306"
        networks:
            - laravel

    phpmyadmin: 
        image: phpmyadmin/phpmyadmin
        restart: always
        ports: 
            - 8090:80
        environment:
            PMA_ARBITRARY: 1
            UPLOAD_LIMIT: 10000000000
            PMA_HOST: 'mysql'
            PMA_USER: '${DB_USERNAME}'
            PMA_PASSWORD: '${DB_PASSWORD}'
        networks:
            - laravel

    # phpmyadmin:
    #     image: phpmyadmin:latest
    #     ports:
    #         - 8090:80
    #     environment:
    #         # - PMA_HOST: mysql
    #         - PMA_HOST=db
    #         - PMA_PORT=3388
    #         - PMA_PASSWORD=${DB_PASSWORD}
    #     restart: unless-stopped
    #     volumes:
    #         - ./.docker/mysql/dbdata:/var/lib/mysql

    # redis
    redis:
        image: redis:latest
        networks:
            - laravel

networks:
    laravel:
        driver: bridge
